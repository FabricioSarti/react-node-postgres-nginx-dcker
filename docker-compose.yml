version: "3"
services:
  #base de datos postgres
  postgres:
    image: "postgres:latest"
    environment:
      - POSTGRES_PASSWORD=postgres_password
    networks: 
      - node-network
    ports: 
      - "5432:5432"
  #servicio nginx
  nginx:
    #esto indica que primero arranque la APP y el API
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3050:80"
    networks: 
      - node-network
  #api en node js
  api:
    build:
      dockerfile: Dockerfile.dev
      context: "./server"
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    networks: 
      - node-network
    ports: 
      - "5000:5000"
  #aplicacion de react
  client:
    #para acceder al contendor por cmd si se pone en false no accedera
    stdin_open: true
    environment:
      #para detectar cambios en archivos locales y poder proceder a compilar otra vez
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    networks: 
      - node-network
    ports: 
      - "3000:3000"
networks: 
  node-network:
    driver: bridge
